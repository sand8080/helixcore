#!/bin/sh
# postinst script for helixbilling
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    
        PYTHON_VERSION_FILE="/usr/share/python-support/python-helixcore/.version"
        echo "Checking python versions"
        if [ ! -e "$PYTHON_VERSION_FILE" ]; then
            echo "Creating $PYTHON_VERSION_FILE"
            PYTHON_ENTERPRETERS=`find /usr/bin -name 'python*'`
            set +e
            for ENT in $PYTHON_ENTERPRETERS; do
                VERSION=`expr match "$ENT" '.*python\([0-9]\+\.[0-9]\+\)$'`
                if [ -n "$VERSION" ]; then
                    if [ "$VERSION" != "2.4" ]; then
                        echo "Adding python version $VERSION to $PYTHON_VERSION_FILE"
                        echo "$VERSION" >> $PYTHON_VERSION_FILE
                    else
                        echo "Ignoring python version $VERSION"
                    fi
                fi
            done
            set -e
        else
            echo "$PYTHON_VERSION_FILE alrady exist. Nothing to do"
        fi
        echo "Python versions checked"
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


