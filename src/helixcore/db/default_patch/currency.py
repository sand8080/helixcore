# -*- coding: utf-8 -*-
def apply(curs):
    print 'Creating table currency'
    curs.execute(
    '''
        CREATE TABLE currency (
            id serial,
            code varchar NOT NULL,
            cent_factor int NOT NULL,
            name varchar,
            location varchar,
            PRIMARY KEY(id),
            UNIQUE(code),
            CHECK(cent_factor > 0)
        )
    ''')

    # (code, cent_factor, name, location)
    currencies = [
        ('AED', 100, 'United Arab Emirates dirham', 'United Arab Emirates'),
        ('AFN', 100, 'Afghani', 'Afghanistan'),
        ('ALL', 100, 'Lek', 'Albania'),
        ('AMD', 1, 'Armenian dram', 'Armenia'),
        ('ANG', 100, 'Netherlands Antillean guilder', 'Netherlands Antilles'),
        ('AOA', 10, 'Kwanza', 'Angola'),
        ('ARS', 100, 'Argentine peso', 'Argentina'),
        ('AUD', 100, 'Australian dollar', 'Australia, Australian Antarctic Territory, Christmas Island, Cocos (Keeling) Islands, Heard and McDonald Islands, Kiribati, Nauru, Norfolk Island, Tuvalu'),
        ('AWG', 100, 'Aruban guilder', 'Aruba'),
        ('AZN', 100, 'Azerbaijanian manat', 'Azerbaijan'),
        ('BAM', 100, 'Convertible marks', 'Bosnia and Herzegovina'),
        ('BBD', 100, 'Barbados dollar', 'Barbados'),
        ('BDT', 100, 'Bangladeshi taka', 'Bangladesh'),
        ('BGN', 100, 'Bulgarian lev', 'Bulgaria'),
        ('BHD', 1000, 'Bahraini dinar', 'Bahrain'),
        ('BIF', 1, 'Burundian franc', 'Burundi'),
        ('BMD', 100, 'Bermudian dollar (customarily known as Bermuda dollar)', 'Bermuda'),
        ('BND', 100, 'Brunei dollar', 'Brunei, Singapore'),
        ('BOB', 100, 'Boliviano', 'Bolivia'),
        ('BRL', 100, 'Brazilian real', 'Brazil'),
        ('BSD', 100, 'Bahamian dollar', 'Bahamas'),
        ('BTN', 100, 'Ngultrum', 'Bhutan'),
        ('BWP', 100, 'Pula', 'Botswana'),
        ('BYR', 1, 'Belarusian ruble', 'Belarus'),
        ('BZD', 100, 'Belize dollar', 'Belize'),
        ('CAD', 100, 'Canadian dollar', 'Canada'),
        ('CDF', 100, 'Franc Congolais', 'Democratic Republic of Congo'),
        ('CHE', 100, 'WIR euro (complementary currency)', 'Switzerland'),
        ('CHF', 100, 'Swiss franc', 'Switzerland, Liechtenstein'),
        ('CHW', 100, 'WIR franc (complementary currency)', 'Switzerland'),
        ('CLP', 1, 'Chilean peso', 'Chile'),
        ('CNY', 10, 'Chinese Yuan', 'China (Mainland)'),
        ('COP', 1, 'Colombian peso', 'Colombia'),
        ('COU', 100, 'Unidad de Valor Real', 'Colombia'),
        ('CRC', 100, 'Costa Rican colon', 'Costa Rica'),
        ('CUC', 100, 'Cuban convertible peso', 'Cuba'),
        ('CUP', 100, 'Cuban peso', 'Cuba'),
        ('CVE', 100, 'Cape Verde escudo', 'Cape Verde'),
        ('CZK', 100, 'Czech Koruna', 'Czech Republic'),
        ('DJF', 1, 'Djibouti franc', 'Djibouti'),
        ('DKK', 100, 'Danish krone', 'Denmark, Faroe Islands, Greenland'),
        ('DOP', 100, 'Dominican peso', 'Dominican Republic'),
        ('DZD', 100, 'Algerian dinar', 'Algeria'),
        ('EEK', 100, 'Kroon', 'Estonia'),
        ('EGP', 100, 'Egyptian pound', 'Egypt'),
        ('ERN', 100, 'Nakfa', 'Eritrea'),
        ('ETB', 100, 'Ethiopian birr', 'Ethiopia'),
        ('EUR', 100, 'euro', 'European Union countries'),
        ('FJD', 100, 'Fiji dollar', 'Fiji'),
        ('FKP', 100, 'Falkland Islands pound', 'Falkland Islands'),
        ('GBP', 100, 'Pound sterling', 'United Kingdom, Crown Dependencies (the Isle of Man and the Channel Islands), certain British Overseas Territories (South Georgia and the South Sandwich Islands, British Antarctic Territory and British Indian Ocean Territory)'),
        ('GEL', 100, 'Lari', 'Georgia'),
        ('GHS', 100, 'Cedi', 'Ghana'),
        ('GIP', 100, 'Gibraltar pound', 'Gibraltar'),
        ('GMD', 100, 'Dalasi', 'Gambia'),
        ('GNF', 1, 'Guinea franc', 'Guinea'),
        ('GTQ', 100, 'Quetzal', 'Guatemala'),
        ('GYD', 100, 'Guyana dollar', 'Guyana'),
        ('HKD', 100, 'Hong Kong dollar', 'Hong Kong Special Administrative Region'),
        ('HNL', 100, 'Lempira', 'Honduras'),
        ('HRK', 100, 'Croatian kuna', 'Croatia'),
        ('HTG', 100, 'Haiti gourde', 'Haiti'),
        ('HUF', 100, 'Forint', 'Hungary'),
        ('IDR', 1, 'Rupiah', 'Indonesia'),
        ('ILS', 100, 'Israeli new sheqel', 'Israel'),
        ('INR', 100, 'Indian rupee', 'Bhutan, India'),
        ('IQD', 1, 'Iraqi dinar', 'Iraq'),
        ('IRR', 1, 'Iranian rial', 'Iran'),
        ('ISK', 1, 'Iceland krona', 'Iceland'),
        ('JMD', 100, 'Jamaican dollar', 'Jamaica'),
        ('JOD', 1000, 'Jordanian dinar', 'Jordan'),
        ('JPY', 1, 'Japanese yen', 'Japan'),
        ('KES', 100, 'Kenyan shilling', 'Kenya'),
        ('KGS', 100, 'Som', 'Kyrgyzstan'),
        ('KHR', 1, 'Riel', 'Cambodia'),
        ('KMF', 1, 'Comoro franc', 'Comoros'),
        ('KPW', 1, 'North Korean won', 'North Korea'),
        ('KRW', 1, 'South Korean won', 'South Korea'),
        ('KWD', 1000, 'Kuwaiti dinar', 'Kuwait'),
        ('KYD', 100, 'Cayman Islands dollar', 'Cayman Islands'),
        ('KZT', 100, 'Tenge', 'Kazakhstan'),
        ('LAK', 1, 'Kip', 'Laos'),
        ('LBP', 1, 'Lebanese pound', 'Lebanon'),
        ('LKR', 100, 'Sri Lanka rupee', 'Sri Lanka'),
        ('LRD', 100, 'Liberian dollar', 'Liberia'),
        ('LSL', 100, 'Lesotho loti', 'Lesotho'),
        ('LTL', 100, 'Lithuanian litas', 'Lithuania'),
        ('LVL', 100, 'Latvian lats', 'Latvia'),
        ('LYD', 1000, 'Libyan dinar', 'Libya'),
        ('MAD', 100, 'Moroccan dirham', 'Morocco, Western Sahara'),
        ('MDL', 100, 'Moldovan leu', 'Moldova'),
        ('MGA', 5, 'Malagasy ariary', 'Madagascar'),
        ('MKD', 100, 'Denar', 'Macedonia'),
        ('MMK', 1, 'Kyat', 'Myanmar'),
        ('MNT', 100, 'Tugrik', 'Mongolia'),
        ('MOP', 10, 'Pataca', 'Macau Special Administrative Region'),
        ('MRO', 5, 'Ouguiya', 'Mauritania'),
        ('MUR', 100, 'Mauritius rupee', 'Mauritius'),
        ('MVR', 100, 'Rufiyaa', 'Maldives'),
        ('MWK', 100, 'Kwacha', 'Malawi'),
        ('MXN', 100, 'Mexican peso', 'Mexico'),
        ('MYR', 100, 'Malaysian ringgit', 'Malaysia'),
        ('MZN', 100, 'Metical', 'Mozambique'),
        ('NAD', 100, 'Namibian dollar', 'Namibia'),
        ('NGN', 100, 'Naira', 'Nigeria'),
        ('NIO', 100, 'Cordoba oro', 'Nicaragua'),
        ('NOK', 100, 'Norwegian krone', 'Norway, Bouvet Island, Queen Maud Land, Peter I Island'),
        ('NPR', 100, 'Nepalese rupee', 'Nepal'),
        ('NZD', 100, 'New Zealand dollar', 'Cook Islands, New Zealand, Niue, Pitcairn, Tokelau'),
        ('OMR', 1000, 'Rial Omani', 'Oman'),
        ('PAB', 100, 'Balboa', 'Panama'),
        ('PEN', 100, 'Nuevo sol', 'Peru'),
        ('PGK', 100, 'Kina', 'Papua New Guinea'),
        ('PHP', 100, 'Philippine peso', 'Philippines'),
        ('PKR', 100, 'Pakistan rupee', 'Pakistan'),
        ('PLN', 100, 'Złoty', 'Poland'),
        ('PYG', 1, 'Guarani', 'Paraguay'),
        ('QAR', 100, 'Qatari rial', 'Qatar'),
        ('RON', 100, 'Romanian new leu', 'Romania'),
        ('RSD', 100, 'Serbian dinar', 'Serbia'),
        ('RUB', 100, 'Russian rouble', 'Russia, Abkhazia, South Ossetia'),
        ('RWF', 1, 'Rwanda franc', 'Rwanda'),
        ('SAR', 100, 'Saudi riyal', 'Saudi Arabia'),
        ('SBD', 100, 'Solomon Islands dollar', 'Solomon Islands'),
        ('SCR', 100, 'Seychelles rupee', 'Seychelles'),
        ('SDG', 100, 'Sudanese pound', 'Sudan'),
        ('SEK', 100, 'Swedish krona/kronor', 'Sweden'),
        ('SGD', 100, 'Singapore dollar', 'Singapore, Brunei'),
        ('SHP', 100, 'Saint Helena pound', 'Saint Helena'),
        ('SLL', 1, 'Leone', 'Sierra Leone'),
        ('SOS', 100, 'Somali shilling', 'Somalia'),
        ('SRD', 100, 'Surinam dollar', 'Suriname'),
        ('STD', 1, 'Dobra', 'São Tomé and Príncipe'),
        ('SYP', 100, 'Syrian pound', 'Syria'),
        ('SZL', 100, 'Lilangeni', 'Swaziland'),
        ('THB', 100, 'Baht', 'Thailand'),
        ('TJS', 100, 'Somoni', 'Tajikistan'),
        ('TMT', 100, 'Manat', 'Turkmenistan'),
        ('TND', 1000, 'Tunisian dinar', 'Tunisia'),
        ('TOP', 100, '''Pa'anga''', 'Tonga'),
        ('TRY', 100, 'Turkish lira', 'Turkey, Northern Cyprus'),
        ('TTD', 100, 'Trinidad and Tobago dollar', 'Trinidad and Tobago'),
        ('TWD', 10, 'New Taiwan dollar', 'Taiwan and other islands that are under the effective control of the Republic of China (ROC)'),
        ('TZS', 100, 'Tanzanian shilling', 'Tanzania'),
        ('UAH', 100, 'Hryvnia', 'Ukraine'),
        ('UGX', 1, 'Uganda shilling', 'Uganda'),
        ('USD', 100, 'US dollar', 'American Samoa, British Indian Ocean Territory, Ecuador, El Salvador, Guam, Haiti, Marshall Islands, Micronesia, Northern Mariana Islands, Palau, Panama, Puerto Rico, Timor-Leste, Turks and Caicos Islands, United States, Virgin Islands, Bermuda (as well as Bermudian Dollar)'),
        ('UYU', 100, 'Peso Uruguayo', 'Uruguay'),
        ('UZS', 100, 'Uzbekistan som', 'Uzbekistan'),
        ('VEF', 100, 'Venezuelan bolívar fuerte', 'Venezuela'),
        ('VND', 1, 'Vietnamese đồng', 'Vietnam'),
        ('VUV', 1, 'Vatu', 'Vanuatu'),
        ('WST', 100, 'Samoan tala', 'Samoa'),
        ('XAF', 1, 'CFA franc BEAC', 'Cameroon, Central African Republic, Congo, Chad, Equatorial Guinea, Gabon'),
        ('XCD', 100, 'East Caribbean dollar', 'Anguilla, Antigua and Barbuda, Dominica, Grenada, Montserrat, Saint Kitts and Nevis, Saint Lucia, Saint Vincent and the Grenadines'),
        ('XOF', 1, 'CFA Franc BCEAO', '''Benin, Burkina Faso, Côte d'Ivoire, Guinea-Bissau, Mali, Niger, Senegal, Togo'''),
        ('XPF', 1, 'CFP franc', 'French Polynesia, New Caledonia, Wallis and Futuna'),
        ('YER', 1, 'Yemeni rial', 'Yemen'),
        ('ZAR', 100, 'South African rand', 'South Africa'),
        ('ZMK', 1, 'Kwacha', 'Zambia'),
        ('ZWL', 100, 'Zimbabwe dollar', 'Zimbabwe'),
    ]
    for t in currencies:
        print 'Adding currency %s' % t[0]
        curs.execute('INSERT INTO currency (code, cent_factor, name, location) VALUES(%s, %s, %s, %s)', t)


def revert(curs):
    print 'Deleting currencies'
    curs.execute('DELETE FROM currency')
    print 'Dropping table currency'
    curs.execute('DROP TABLE IF EXISTS currency')

